machine:
  environment:
    DELETE: TRUE
    MASTER_DELETE: FALSE
    
dependencies:
  pre:
    - wget https://releases.hashicorp.com/terraform/0.7.4/terraform_0.7.4_linux_amd64.zip
    - unzip terraform_0.7.4_linux_amd64.zip
    - if [[ "$CIRCLE_BRANCH" != "develop" ]] && [[ "$CIRCLE_BRANCH" != "master" ]]; then mkdir -p $CIRCLE_BRANCH; fi

test:
  override:
    - ./terraform remote config -backend=S3 -backend-config="bucket=$BUCKET" -backend-config="key=$CIRCLE_BRANCH/terraform.tfstate" -backend-config="region=$REGION"
    - ./terraform get
    - ./terraform plan -var "run_region=$REGION" -var-file="$(if [[ "$CIRCLE_BRANCH" != "develop" ]] && [[ "$CIRCLE_BRANCH" != "master" ]]; then echo "test"; else echo "$CIRCLE_BRANCH"; fi)/terraform.tfvars" -out="$(if [[ "$CIRCLE_BRANCH" != "develop" ]] && [[ "$CIRCLE_BRANCH" != "master" ]]; then echo "test"; else echo "$CIRCLE_BRANCH"; fi)/terraform.plan"

deployment:
  feature:
    branch: /feature_.*/
    commands:
      - ./terraform apply "$(if [[ "$CIRCLE_BRANCH" != "develop" ]] && [[ "$CIRCLE_BRANCH" != "master" ]]; then $(echo "test"); else $(echo "$CIRCLE_BRANCH"); fi)/terraform.plan
      - ./terraform remote push
      - ./terraform plan -var "run_region=$REGION" -var-file="$(if [[ "$CIRCLE_BRANCH" != "develop" ]] && [[ "$CIRCLE_BRANCH" != "master" ]]; then $(echo "test"); else $(echo "$CIRCLE_BRANCH"); fi)/terraform.tfvars" -out="$(if [[ "$CIRCLE_BRANCH" != "develop" ]] && [[ "$CIRCLE_BRANCH" != "master" ]]; then $(echo "test"); else $(echo "$CIRCLE_BRANCH"); fi)/destroy.plan" -destroy
      - ./terraform destroy -var "run_region=$REGION" -force;
  development:
    branch: develop
    commands:
      - ./terraform apply "$CIRCLE_BRANCH"/terraform.plan
      - ./terraform remote push
      - ./terraform plan -var "run_region=$REGION" -var-file="$CIRCLE_BRANCH/terraform.tfvars" -out="$CIRCLE_BRANCH/destroy.plan" -destroy
      - if [[ "$DELETE" == "TRUE" ]]; then ./terraform destroy -var "run_region=$REGION" -var-file="$CIRCLE_BRANCH/terraform.tfvars" -force; fi
  production:
    branch: master
    commands:
      - ./terraform apply "$CIRCLE_BRANCH"/terraform.plan
      - ./terraform remote push
      - ./terraform plan -var "run_region=$REGION" -var-file="$CIRCLE_BRANCH/terraform.tfvars" -out="$CIRCLE_BRANCH/destroy.plan" -destroy
      - if [[ "$MASTER_DELETE" == "TRUE" ]]; then ./terraform destroy -var "run_region=$REGION" -var-file="$CIRCLE_BRANCH/terraform.tfvars" -force; fi